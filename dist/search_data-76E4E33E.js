searchData={"items":[{"type":"module","title":"CloudflareDurable.App","doc":"Application module for CloudflareDurable.\n\nThis module starts the necessary processes for the CloudflareDurable application,\nincluding the WebSocket supervisor and Finch HTTP client pool.","ref":"CloudflareDurable.App.html"},{"type":"function","title":"CloudflareDurable.App.start/2","doc":"Starts the CloudflareDurable application.","ref":"CloudflareDurable.App.html#start/2"},{"type":"function","title":"Parameters - CloudflareDurable.App.start/2","doc":"* `type` - Start type (e.g., :normal, {:takeover, node()}, {:failover, node()})\n  * `args` - Start arguments","ref":"CloudflareDurable.App.html#start/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.App.start/2","doc":"* `{:ok, pid}` - Successfully started the application supervisor\n  * `{:error, reason}` - Failed to start the application","ref":"CloudflareDurable.App.html#start/2-returns"},{"type":"type","title":"CloudflareDurable.App.start_args/0","doc":"","ref":"CloudflareDurable.App.html#t:start_args/0"},{"type":"type","title":"CloudflareDurable.App.start_type/0","doc":"","ref":"CloudflareDurable.App.html#t:start_type/0"},{"type":"module","title":"CloudflareDurable.Application","doc":"Application interface for Cloudflare Durable Objects.\n\nThis module provides an interface for managing state in a Durable Object.","ref":"CloudflareDurable.Application.html"},{"type":"function","title":"CloudflareDurable.Application.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"CloudflareDurable.Application.html#child_spec/1"},{"type":"function","title":"CloudflareDurable.Application.delete/2","doc":"Deletes a value from the Durable Object state.","ref":"CloudflareDurable.Application.html#delete/2"},{"type":"function","title":"Parameters - CloudflareDurable.Application.delete/2","doc":"* `pid` - PID of the Application process\n  * `key` - Key to delete","ref":"CloudflareDurable.Application.html#delete/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Application.delete/2","doc":"* `:ok` - Successfully deleted the value\n  * `{:error, reason}` - Failed to delete the value","ref":"CloudflareDurable.Application.html#delete/2-returns"},{"type":"function","title":"CloudflareDurable.Application.get/2","doc":"Gets a value from the Durable Object state.","ref":"CloudflareDurable.Application.html#get/2"},{"type":"function","title":"Parameters - CloudflareDurable.Application.get/2","doc":"* `pid` - PID of the Application process\n  * `key` - Key to get","ref":"CloudflareDurable.Application.html#get/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Application.get/2","doc":"* `{:ok, value}` - Successfully got the value\n  * `{:error, reason}` - Failed to get the value","ref":"CloudflareDurable.Application.html#get/2-returns"},{"type":"function","title":"CloudflareDurable.Application.get_all/2","doc":"Gets multiple values from the Durable Object state.","ref":"CloudflareDurable.Application.html#get_all/2"},{"type":"function","title":"Parameters - CloudflareDurable.Application.get_all/2","doc":"* `pid` - PID of the Application process\n  * `keys` - List of keys to get","ref":"CloudflareDurable.Application.html#get_all/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Application.get_all/2","doc":"* `{:ok, map}` - Successfully got the values\n  * `{:error, reason}` - Failed to get the values","ref":"CloudflareDurable.Application.html#get_all/2-returns"},{"type":"function","title":"CloudflareDurable.Application.put/3","doc":"Puts a value in the Durable Object state.","ref":"CloudflareDurable.Application.html#put/3"},{"type":"function","title":"Parameters - CloudflareDurable.Application.put/3","doc":"* `pid` - PID of the Application process\n  * `key` - Key to put\n  * `value` - Value to put","ref":"CloudflareDurable.Application.html#put/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Application.put/3","doc":"* `:ok` - Successfully put the value\n  * `{:error, reason}` - Failed to put the value","ref":"CloudflareDurable.Application.html#put/3-returns"},{"type":"function","title":"CloudflareDurable.Application.put_all/2","doc":"Puts multiple values in the Durable Object state.","ref":"CloudflareDurable.Application.html#put_all/2"},{"type":"function","title":"Parameters - CloudflareDurable.Application.put_all/2","doc":"* `pid` - PID of the Application process\n  * `map` - Map of key-value pairs to put","ref":"CloudflareDurable.Application.html#put_all/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Application.put_all/2","doc":"* `:ok` - Successfully put the values\n  * `{:error, reason}` - Failed to put the values","ref":"CloudflareDurable.Application.html#put_all/2-returns"},{"type":"function","title":"CloudflareDurable.Application.start_link/1","doc":"Starts a new Application process.","ref":"CloudflareDurable.Application.html#start_link/1"},{"type":"function","title":"Parameters - CloudflareDurable.Application.start_link/1","doc":"* `opts` - Options for the Application:\n    * `:url` - URL of the Cloudflare Worker (required)\n    * `:id_type` - Type of ID to use (:string or :name, default: :string)\n    * `:object_name` - Object name to use (for :name ID type)\n    * `:retry_options` - Retry options for HTTP requests","ref":"CloudflareDurable.Application.html#start_link/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Application.start_link/1","doc":"* `{:ok, pid}` - Successfully started the Application\n  * `{:error, reason}` - Failed to start the Application","ref":"CloudflareDurable.Application.html#start_link/1-returns"},{"type":"function","title":"CloudflareDurable.Application.stop/1","doc":"Stops the Application process.","ref":"CloudflareDurable.Application.html#stop/1"},{"type":"function","title":"Parameters - CloudflareDurable.Application.stop/1","doc":"* `pid` - PID of the Application process","ref":"CloudflareDurable.Application.html#stop/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Application.stop/1","doc":"* `:ok` - Successfully stopped the process","ref":"CloudflareDurable.Application.html#stop/1-returns"},{"type":"function","title":"CloudflareDurable.Application.update/3","doc":"Updates a value in the Durable Object state using a function.","ref":"CloudflareDurable.Application.html#update/3"},{"type":"function","title":"Parameters - CloudflareDurable.Application.update/3","doc":"* `pid` - PID of the Application process\n  * `key` - Key to update\n  * `fun` - Function to apply to the current value","ref":"CloudflareDurable.Application.html#update/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Application.update/3","doc":"* `{:ok, new_value}` - Successfully updated the value\n  * `{:error, reason}` - Failed to update the value","ref":"CloudflareDurable.Application.html#update/3-returns"},{"type":"module","title":"CloudflareDurable.Benchmark.Http","doc":"Benchmarks for HTTP requests to Cloudflare Durable Objects.\n\nThis module provides benchmarks for measuring the performance of HTTP requests\nto Cloudflare Durable Objects, including initialization, method calls, and state operations.","ref":"CloudflareDurable.Benchmark.Http.html"},{"type":"function","title":"CloudflareDurable.Benchmark.Http.run/3","doc":"Runs the HTTP benchmark suite.","ref":"CloudflareDurable.Benchmark.Http.html#run/3"},{"type":"function","title":"Parameters - CloudflareDurable.Benchmark.Http.run/3","doc":"* `output_path` - Optional path to save benchmark results to\n  * `save_results` - Whether to save results to a timestamped file\n  * `compare_file` - Optional path to a previous benchmark result to compare against","ref":"CloudflareDurable.Benchmark.Http.html#run/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.Http.run/3","doc":"* `:ok` - The benchmark completed successfully","ref":"CloudflareDurable.Benchmark.Http.html#run/3-returns"},{"type":"module","title":"CloudflareDurable.Benchmark.State","doc":"Benchmarks for state operations with Cloudflare Durable Objects.\n\nThis module provides benchmarks for measuring the performance of state operations\nwith Cloudflare Durable Objects, including bulk operations and persistence scenarios.","ref":"CloudflareDurable.Benchmark.State.html"},{"type":"function","title":"CloudflareDurable.Benchmark.State.run/3","doc":"Runs the state operations benchmark suite.","ref":"CloudflareDurable.Benchmark.State.html#run/3"},{"type":"function","title":"Parameters - CloudflareDurable.Benchmark.State.run/3","doc":"* `output_path` - Optional path to save benchmark results to\n  * `save_results` - Whether to save results to a timestamped file\n  * `compare_file` - Optional path to a previous benchmark result to compare against","ref":"CloudflareDurable.Benchmark.State.html#run/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.State.run/3","doc":"* `:ok` - The benchmark completed successfully","ref":"CloudflareDurable.Benchmark.State.html#run/3-returns"},{"type":"module","title":"CloudflareDurable.Benchmark.Utils","doc":"Utility functions for benchmarks.\n\nThis module provides common utility functions used by the benchmark modules.","ref":"CloudflareDurable.Benchmark.Utils.html"},{"type":"function","title":"CloudflareDurable.Benchmark.Utils.ensure_dir/1","doc":"Creates a directory if it doesn't exist.","ref":"CloudflareDurable.Benchmark.Utils.html#ensure_dir/1"},{"type":"function","title":"Parameters - CloudflareDurable.Benchmark.Utils.ensure_dir/1","doc":"* `path` - The path to create","ref":"CloudflareDurable.Benchmark.Utils.html#ensure_dir/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.Utils.ensure_dir/1","doc":"* `:ok` - The directory was created or already exists","ref":"CloudflareDurable.Benchmark.Utils.html#ensure_dir/1-returns"},{"type":"function","title":"CloudflareDurable.Benchmark.Utils.format_bytes/1","doc":"Formats a byte size in the most appropriate unit.","ref":"CloudflareDurable.Benchmark.Utils.html#format_bytes/1"},{"type":"function","title":"Parameters - CloudflareDurable.Benchmark.Utils.format_bytes/1","doc":"* `bytes` - The size in bytes","ref":"CloudflareDurable.Benchmark.Utils.html#format_bytes/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.Utils.format_bytes/1","doc":"* `String.t()` - A formatted size string","ref":"CloudflareDurable.Benchmark.Utils.html#format_bytes/1-returns"},{"type":"function","title":"CloudflareDurable.Benchmark.Utils.format_time/1","doc":"Formats a time value in the most appropriate unit.","ref":"CloudflareDurable.Benchmark.Utils.html#format_time/1"},{"type":"function","title":"Parameters - CloudflareDurable.Benchmark.Utils.format_time/1","doc":"* `time_ns` - The time in nanoseconds","ref":"CloudflareDurable.Benchmark.Utils.html#format_time/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.Utils.format_time/1","doc":"* `String.t()` - A formatted time string","ref":"CloudflareDurable.Benchmark.Utils.html#format_time/1-returns"},{"type":"function","title":"CloudflareDurable.Benchmark.Utils.random_id/0","doc":"Generates a random ID for use in benchmarks.","ref":"CloudflareDurable.Benchmark.Utils.html#random_id/0"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.Utils.random_id/0","doc":"* `String.t()` - A random string ID","ref":"CloudflareDurable.Benchmark.Utils.html#random_id/0-returns"},{"type":"function","title":"CloudflareDurable.Benchmark.Utils.random_string/1","doc":"Generates a random string of the specified length.","ref":"CloudflareDurable.Benchmark.Utils.html#random_string/1"},{"type":"function","title":"Parameters - CloudflareDurable.Benchmark.Utils.random_string/1","doc":"* `length` - The length of the random string to generate","ref":"CloudflareDurable.Benchmark.Utils.html#random_string/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.Utils.random_string/1","doc":"* `String.t()` - A random string of the specified length","ref":"CloudflareDurable.Benchmark.Utils.html#random_string/1-returns"},{"type":"function","title":"CloudflareDurable.Benchmark.Utils.summarize_results/1","doc":"Summarizes benchmark results for the console.","ref":"CloudflareDurable.Benchmark.Utils.html#summarize_results/1"},{"type":"function","title":"Parameters - CloudflareDurable.Benchmark.Utils.summarize_results/1","doc":"* `results` - The benchmark results","ref":"CloudflareDurable.Benchmark.Utils.html#summarize_results/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.Utils.summarize_results/1","doc":"* `String.t()` - A string summarizing the results","ref":"CloudflareDurable.Benchmark.Utils.html#summarize_results/1-returns"},{"type":"function","title":"CloudflareDurable.Benchmark.Utils.timestamp/0","doc":"Gets a timestamp for use in filenames.","ref":"CloudflareDurable.Benchmark.Utils.html#timestamp/0"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.Utils.timestamp/0","doc":"* `String.t()` - A timestamp string in the format \"YYYYMMDD_HHMMSS\"","ref":"CloudflareDurable.Benchmark.Utils.html#timestamp/0-returns"},{"type":"module","title":"CloudflareDurable.Benchmark.WebSocket","doc":"Benchmarks for WebSocket operations with Cloudflare Durable Objects.\n\nThis module provides benchmarks for measuring the performance of WebSocket\nconnections to Cloudflare Durable Objects, including connection establishment,\nmessage sending, and concurrent connections.","ref":"CloudflareDurable.Benchmark.WebSocket.html"},{"type":"function","title":"CloudflareDurable.Benchmark.WebSocket.run/3","doc":"Runs the WebSocket benchmark suite.","ref":"CloudflareDurable.Benchmark.WebSocket.html#run/3"},{"type":"function","title":"Parameters - CloudflareDurable.Benchmark.WebSocket.run/3","doc":"* `output_path` - Optional path to save benchmark results to\n  * `save_results` - Whether to save results to a timestamped file\n  * `compare_file` - Optional path to a previous benchmark result to compare against","ref":"CloudflareDurable.Benchmark.WebSocket.html#run/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Benchmark.WebSocket.run/3","doc":"* `:ok` - The benchmark completed successfully","ref":"CloudflareDurable.Benchmark.WebSocket.html#run/3-returns"},{"type":"module","title":"CloudflareDurable.HTTP","doc":"HTTP client for Cloudflare Durable Objects.\n\nThis module provides low-level HTTP request functions for interacting with\nCloudflare Durable Objects.","ref":"CloudflareDurable.HTTP.html"},{"type":"function","title":"CloudflareDurable.HTTP.request/5","doc":"Makes an HTTP request.","ref":"CloudflareDurable.HTTP.html#request/5"},{"type":"function","title":"Parameters - CloudflareDurable.HTTP.request/5","doc":"* `method` - HTTP method (:get, :post, :put, :delete, etc.)\n  * `url` - URL to request\n  * `body` - Request body\n  * `headers` - Request headers\n  * `opts` - Request options","ref":"CloudflareDurable.HTTP.html#request/5-parameters"},{"type":"function","title":"Returns - CloudflareDurable.HTTP.request/5","doc":"* `{:ok, status, headers, body}` - Successful response\n  * `{:error, reason}` - Request failed","ref":"CloudflareDurable.HTTP.html#request/5-returns"},{"type":"module","title":"CloudflareDurable.Phoenix.Application","doc":"Phoenix adapter application for CloudflareDurable.\n\nThis module provides the application configuration for integrating\nCloudflareDurable with Phoenix applications.","ref":"CloudflareDurable.Phoenix.Application.html"},{"type":"function","title":"CloudflareDurable.Phoenix.Application.start/2","doc":"Starts the CloudflareDurable Phoenix adapter.","ref":"CloudflareDurable.Phoenix.Application.html#start/2"},{"type":"module","title":"CloudflareDurable.Phoenix.Channel","doc":"Phoenix Channel for real-time communication with Durable Objects.\n\nThis module provides the Socket and Channel implementation for\ncommunicating with Cloudflare Durable Objects in real-time.\nIt handles client connections, message routing, and presence tracking.","ref":"CloudflareDurable.Phoenix.Channel.html"},{"type":"function","title":"CloudflareDurable.Phoenix.Channel.child_spec/1","doc":"","ref":"CloudflareDurable.Phoenix.Channel.html#child_spec/1"},{"type":"function","title":"CloudflareDurable.Phoenix.Channel.handle_in/3","doc":"Handles explicit refresh requests from the client.","ref":"CloudflareDurable.Phoenix.Channel.html#handle_in/3"},{"type":"function","title":"CloudflareDurable.Phoenix.Channel.handle_info/2","doc":"Handles Durable Object update broadcasts.\n\nWhen a Durable Object state is updated, this pushes the update\nto the client via the channel.","ref":"CloudflareDurable.Phoenix.Channel.html#handle_info/2"},{"type":"function","title":"CloudflareDurable.Phoenix.Channel.join/3","doc":"Handles joining the Durable Object channel.\n\nWhen a client joins, it will:\n1. Start or get the DurableServer process\n2. Track the client with Presence\n3. Return the current state to the client","ref":"CloudflareDurable.Phoenix.Channel.html#join/3"},{"type":"function","title":"CloudflareDurable.Phoenix.Channel.start_link/1","doc":"","ref":"CloudflareDurable.Phoenix.Channel.html#start_link/1"},{"type":"module","title":"CloudflareDurable.Phoenix.DurableServer","doc":"GenServer representation of a Cloudflare Durable Object.\n\nThis module provides a local representation of Durable Objects,\nhandling state synchronization, caching, and event broadcasting.\nIt communicates with Cloudflare's edge network to maintain\nconsistency with the remote Durable Object.","ref":"CloudflareDurable.Phoenix.DurableServer.html"},{"type":"function","title":"CloudflareDurable.Phoenix.DurableServer.call_method/3","doc":"Calls a method on the Durable Object.","ref":"CloudflareDurable.Phoenix.DurableServer.html#call_method/3"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.DurableServer.call_method/3","doc":"* `server` - The DurableServer process\n* `method` - The method to call\n* `params` - Parameters to pass to the method","ref":"CloudflareDurable.Phoenix.DurableServer.html#call_method/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.DurableServer.call_method/3","doc":"* `{:ok, result}` - The result of the method call\n* `{:error, reason}` - If there was an error calling the method","ref":"CloudflareDurable.Phoenix.DurableServer.html#call_method/3-returns"},{"type":"function","title":"CloudflareDurable.Phoenix.DurableServer.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"CloudflareDurable.Phoenix.DurableServer.html#child_spec/1"},{"type":"function","title":"CloudflareDurable.Phoenix.DurableServer.get_state/2","doc":"Gets the current state of the Durable Object.","ref":"CloudflareDurable.Phoenix.DurableServer.html#get_state/2"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.DurableServer.get_state/2","doc":"* `server` - The DurableServer process\n* `key` - Optional specific key to retrieve (nil returns full state)","ref":"CloudflareDurable.Phoenix.DurableServer.html#get_state/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.DurableServer.get_state/2","doc":"* `{:ok, value}` - The value of the requested key or full state map\n* `{:error, reason}` - If there was an error retrieving the state","ref":"CloudflareDurable.Phoenix.DurableServer.html#get_state/2-returns"},{"type":"type","title":"CloudflareDurable.Phoenix.DurableServer.key/0","doc":"","ref":"CloudflareDurable.Phoenix.DurableServer.html#t:key/0"},{"type":"type","title":"CloudflareDurable.Phoenix.DurableServer.object_id/0","doc":"","ref":"CloudflareDurable.Phoenix.DurableServer.html#t:object_id/0"},{"type":"function","title":"CloudflareDurable.Phoenix.DurableServer.refresh_state/1","doc":"Refreshes the local cache with the current Durable Object state.","ref":"CloudflareDurable.Phoenix.DurableServer.html#refresh_state/1"},{"type":"type","title":"CloudflareDurable.Phoenix.DurableServer.server/0","doc":"","ref":"CloudflareDurable.Phoenix.DurableServer.html#t:server/0"},{"type":"function","title":"CloudflareDurable.Phoenix.DurableServer.start_link/2","doc":"Starts a DurableServer for the given object_id.","ref":"CloudflareDurable.Phoenix.DurableServer.html#start_link/2"},{"type":"function","title":"Options - CloudflareDurable.Phoenix.DurableServer.start_link/2","doc":"* `:refresh_interval` - Milliseconds between state refreshes (default: 10000)\n* `:name` - Optional name for the process","ref":"CloudflareDurable.Phoenix.DurableServer.html#start_link/2-options"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.DurableServer.start_link/2","doc":"* `{:ok, pid}` - If the server was started successfully\n* `{:error, reason}` - If the server could not be started","ref":"CloudflareDurable.Phoenix.DurableServer.html#start_link/2-returns"},{"type":"type","title":"CloudflareDurable.Phoenix.DurableServer.state/0","doc":"","ref":"CloudflareDurable.Phoenix.DurableServer.html#t:state/0"},{"type":"function","title":"CloudflareDurable.Phoenix.DurableServer.update_state/3","doc":"Updates a key in the Durable Object's state.\n\nThis updates both the remote Durable Object and the local cache,\nand broadcasts the change to all subscribers.","ref":"CloudflareDurable.Phoenix.DurableServer.html#update_state/3"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.DurableServer.update_state/3","doc":"* `server` - The DurableServer process\n* `key` - The key to update\n* `value` - The new value","ref":"CloudflareDurable.Phoenix.DurableServer.html#update_state/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.DurableServer.update_state/3","doc":"* `:ok` - If the update was successful\n* `{:error, reason}` - If there was an error updating the state","ref":"CloudflareDurable.Phoenix.DurableServer.html#update_state/3-returns"},{"type":"type","title":"CloudflareDurable.Phoenix.DurableServer.value/0","doc":"","ref":"CloudflareDurable.Phoenix.DurableServer.html#t:value/0"},{"type":"function","title":"CloudflareDurable.Phoenix.DurableServer.via_tuple/1","doc":"Gets the server process for an object_id from the registry.","ref":"CloudflareDurable.Phoenix.DurableServer.html#via_tuple/1"},{"type":"module","title":"CloudflareDurable.Phoenix.Examples.CounterLive","doc":"Example LiveView for a Durable Object counter.\n\nThis module demonstrates how to use the CloudflareDurable.Phoenix adapter\nwith a Phoenix LiveView to create a real-time, globally distributed counter.","ref":"CloudflareDurable.Phoenix.Examples.CounterLive.html"},{"type":"function","title":"CloudflareDurable.Phoenix.Examples.CounterLive.handle_event/3","doc":"Handles the reset event.","ref":"CloudflareDurable.Phoenix.Examples.CounterLive.html#handle_event/3"},{"type":"function","title":"CloudflareDurable.Phoenix.Examples.CounterLive.handle_info/2","doc":"Handles Durable Object state updates.","ref":"CloudflareDurable.Phoenix.Examples.CounterLive.html#handle_info/2"},{"type":"function","title":"CloudflareDurable.Phoenix.Examples.CounterLive.mount/3","doc":"Mounts the LiveView.\n\nGets the counter ID from URL parameters or uses a default,\nand subscribes to updates for that counter.","ref":"CloudflareDurable.Phoenix.Examples.CounterLive.html#mount/3"},{"type":"function","title":"CloudflareDurable.Phoenix.Examples.CounterLive.render/1","doc":"Renders the LiveView.","ref":"CloudflareDurable.Phoenix.Examples.CounterLive.html#render/1"},{"type":"module","title":"CloudflareDurable.Phoenix.Live.DurableComponent","doc":"LiveView component for Durable Objects.\n\nThis component provides a UI for interacting with Durable Objects,\nincluding viewing state, updating values, and calling methods.\nIt handles real-time updates and provides a consistent user experience.","ref":"CloudflareDurable.Phoenix.Live.DurableComponent.html"},{"type":"function","title":"CloudflareDurable.Phoenix.Live.DurableComponent.handle_event/3","doc":"Handles refresh events from the UI.","ref":"CloudflareDurable.Phoenix.Live.DurableComponent.html#handle_event/3"},{"type":"function","title":"CloudflareDurable.Phoenix.Live.DurableComponent.handle_info/2","doc":"Handles Durable Object state updates from PubSub.","ref":"CloudflareDurable.Phoenix.Live.DurableComponent.html#handle_info/2"},{"type":"function","title":"CloudflareDurable.Phoenix.Live.DurableComponent.mount/1","doc":"Initializes the component state.","ref":"CloudflareDurable.Phoenix.Live.DurableComponent.html#mount/1"},{"type":"function","title":"CloudflareDurable.Phoenix.Live.DurableComponent.render/1","doc":"Renders the LiveView component.","ref":"CloudflareDurable.Phoenix.Live.DurableComponent.html#render/1"},{"type":"function","title":"CloudflareDurable.Phoenix.Live.DurableComponent.update/2","doc":"Updates the component when new assigns are received.","ref":"CloudflareDurable.Phoenix.Live.DurableComponent.html#update/2"},{"type":"function","title":"Required Assigns - CloudflareDurable.Phoenix.Live.DurableComponent.update/2","doc":"* `:object_id` - The ID of the Durable Object to display","ref":"CloudflareDurable.Phoenix.Live.DurableComponent.html#update/2-required-assigns"},{"type":"function","title":"Optional Assigns - CloudflareDurable.Phoenix.Live.DurableComponent.update/2","doc":"* `:title` - Custom title for the component\n* `:allow_updates` - Whether to show update controls (default: true)\n* `:allow_method_calls` - Whether to show method call controls (default: true)","ref":"CloudflareDurable.Phoenix.Live.DurableComponent.html#update/2-optional-assigns"},{"type":"module","title":"CloudflareDurable.Phoenix.Presence","doc":"Tracks presence of clients connected to Durable Object channels.\n\nThis module utilizes Phoenix.Presence to track clients that are\nconnected to specific Durable Objects, enabling features like\nuser lists and real-time presence indicators.","ref":"CloudflareDurable.Phoenix.Presence.html"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.child_spec/1","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#child_spec/1"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.fetch/2","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#fetch/2"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.fetchers_pids/0","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#fetchers_pids/0"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.get_by_key/2","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#get_by_key/2"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.list/1","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#list/1"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.track/3","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#track/3"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.track/4","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#track/4"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.untrack/2","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#untrack/2"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.untrack/3","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#untrack/3"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.update/3","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#update/3"},{"type":"function","title":"CloudflareDurable.Phoenix.Presence.update/4","doc":"","ref":"CloudflareDurable.Phoenix.Presence.html#update/4"},{"type":"module","title":"CloudflareDurable.WebSocket","doc":"Simple interface for connecting to WebSocket endpoints in Cloudflare Durable Objects.\n\nThis module provides functions for connecting to, sending messages to, and closing\nWebSocket connections to Durable Objects.","ref":"CloudflareDurable.WebSocket.html"},{"type":"function","title":"CloudflareDurable.WebSocket.close/1","doc":"Closes a WebSocket connection.","ref":"CloudflareDurable.WebSocket.html#close/1"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.close/1","doc":"* `connection` - WebSocket connection","ref":"CloudflareDurable.WebSocket.html#close/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.close/1","doc":"* `:ok` - Connection closed successfully","ref":"CloudflareDurable.WebSocket.html#close/1-returns"},{"type":"function","title":"CloudflareDurable.WebSocket.connect/1","doc":"Connects to a WebSocket endpoint.","ref":"CloudflareDurable.WebSocket.html#connect/1"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.connect/1","doc":"* `url` - URL of the WebSocket endpoint","ref":"CloudflareDurable.WebSocket.html#connect/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.connect/1","doc":"* `{:ok, connection}` - Successfully connected to the WebSocket\n  * `{:error, reason}` - Failed to connect to the WebSocket","ref":"CloudflareDurable.WebSocket.html#connect/1-returns"},{"type":"type","title":"CloudflareDurable.WebSocket.connection/0","doc":"","ref":"CloudflareDurable.WebSocket.html#t:connection/0"},{"type":"type","title":"CloudflareDurable.WebSocket.error_reason/0","doc":"","ref":"CloudflareDurable.WebSocket.html#t:error_reason/0"},{"type":"type","title":"CloudflareDurable.WebSocket.message/0","doc":"","ref":"CloudflareDurable.WebSocket.html#t:message/0"},{"type":"function","title":"CloudflareDurable.WebSocket.send/2","doc":"Sends a message over a WebSocket connection.","ref":"CloudflareDurable.WebSocket.html#send/2"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.send/2","doc":"* `connection` - WebSocket connection\n  * `message` - Message to send","ref":"CloudflareDurable.WebSocket.html#send/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.send/2","doc":"* `:ok` - Message sent successfully\n  * `{:error, reason}` - Failed to send message","ref":"CloudflareDurable.WebSocket.html#send/2-returns"},{"type":"task","title":"mix benchmark","doc":"Mix task to run CloudflareDurable benchmarks.","ref":"Mix.Tasks.Benchmark.html"},{"type":"task","title":"Examples - mix benchmark","doc":"Run all benchmarks:\n\n    mix benchmark\n\nRun specific benchmark categories:\n\n    mix benchmark http\n    mix benchmark websocket\n    mix benchmark state\n\nRun with options:\n\n    mix benchmark --output benchmarks/html\n    mix benchmark --save","ref":"Mix.Tasks.Benchmark.html#module-examples"},{"type":"task","title":"mix release_hex","doc":"A mix task to help with releasing new versions to Hex.pm.\n\nThis task:\n\n1. Updates version in mix.exs\n2. Updates CHANGELOG.md with the release date\n3. Commits these changes\n4. Creates a git tag\n5. Pushes changes and tags to GitHub\n6. Publishes the package to Hex.pm","ref":"Mix.Tasks.ReleaseHex.html"},{"type":"task","title":"Examples - mix release_hex","doc":"mix release_hex 0.3.0","ref":"Mix.Tasks.ReleaseHex.html#module-examples"},{"type":"module","title":"CloudflareDurable","doc":"CloudflareDurable is a client for Cloudflare Durable Objects, providing a simple interface\nfor distributed state management, WebSocket connections, and method invocation.\n\nThis module provides convenience functions that delegate to the underlying Client module.","ref":"CloudflareDurable.html"},{"type":"module","title":"Usage - CloudflareDurable","doc":"```elixir\n# Initialize a new Durable Object\n{:ok, _} = CloudflareDurable.initialize(\"counter\", %{value: 0})\n\n# Call a method on the Durable Object\n{:ok, result} = CloudflareDurable.call_method(\"counter\", \"increment\", %{increment: 1})\n\n# Open a WebSocket for real-time updates\n{:ok, socket} = CloudflareDurable.open_websocket(\"counter\")\n```","ref":"CloudflareDurable.html#module-usage"},{"type":"function","title":"CloudflareDurable.call_method/4","doc":"Calls a method on a Durable Object.","ref":"CloudflareDurable.html#call_method/4"},{"type":"function","title":"Parameters - CloudflareDurable.call_method/4","doc":"* `object_id` - ID of the Durable Object to call\n  * `method` - Method to call on the Durable Object\n  * `params` - Parameters to pass to the method\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.html#call_method/4-parameters"},{"type":"function","title":"Returns - CloudflareDurable.call_method/4","doc":"* `{:ok, response}` - Successfully called method on Durable Object\n  * `{:error, reason}` - Failed to call method on Durable Object","ref":"CloudflareDurable.html#call_method/4-returns"},{"type":"type","title":"CloudflareDurable.client_opts/0","doc":"","ref":"CloudflareDurable.html#t:client_opts/0"},{"type":"function","title":"CloudflareDurable.delete_state/3","doc":"Deletes a key from a Durable Object's state.","ref":"CloudflareDurable.html#delete_state/3"},{"type":"function","title":"Parameters - CloudflareDurable.delete_state/3","doc":"* `object_id` - ID of the Durable Object to update\n  * `key` - Key to delete\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.html#delete_state/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.delete_state/3","doc":"* `{:ok, response}` - Successfully deleted key\n  * `{:error, reason}` - Failed to delete key","ref":"CloudflareDurable.html#delete_state/3-returns"},{"type":"type","title":"CloudflareDurable.error_reason/0","doc":"","ref":"CloudflareDurable.html#t:error_reason/0"},{"type":"function","title":"CloudflareDurable.get_namespace_object/3","doc":"Gets a namespace object ID from a namespace and name.","ref":"CloudflareDurable.html#get_namespace_object/3"},{"type":"function","title":"Parameters - CloudflareDurable.get_namespace_object/3","doc":"* `namespace` - Durable Object namespace\n  * `name` - Name within the namespace\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.html#get_namespace_object/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.get_namespace_object/3","doc":"* `{:ok, object_id}` - Successfully got object ID\n  * `{:error, reason}` - Failed to get object ID","ref":"CloudflareDurable.html#get_namespace_object/3-returns"},{"type":"function","title":"CloudflareDurable.get_state/3","doc":"Gets the state of a Durable Object.","ref":"CloudflareDurable.html#get_state/3"},{"type":"function","title":"Parameters - CloudflareDurable.get_state/3","doc":"* `object_id` - ID of the Durable Object to get state from\n  * `key` - Optional specific key to get (if nil, gets all state)\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.html#get_state/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.get_state/3","doc":"* `{:ok, state}` - Successfully retrieved state\n  * `{:error, reason}` - Failed to retrieve state","ref":"CloudflareDurable.html#get_state/3-returns"},{"type":"function","title":"CloudflareDurable.initialize/3","doc":"Initializes a new Durable Object instance.","ref":"CloudflareDurable.html#initialize/3"},{"type":"function","title":"Parameters - CloudflareDurable.initialize/3","doc":"* `object_id` - ID of the Durable Object to initialize\n  * `data` - Initial data to store in the Durable Object\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.html#initialize/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.initialize/3","doc":"* `{:ok, response}` - Successfully initialized Durable Object\n  * `{:error, reason}` - Failed to initialize Durable Object","ref":"CloudflareDurable.html#initialize/3-returns"},{"type":"type","title":"CloudflareDurable.method_name/0","doc":"","ref":"CloudflareDurable.html#t:method_name/0"},{"type":"type","title":"CloudflareDurable.method_params/0","doc":"","ref":"CloudflareDurable.html#t:method_params/0"},{"type":"type","title":"CloudflareDurable.object_id/0","doc":"","ref":"CloudflareDurable.html#t:object_id/0"},{"type":"function","title":"CloudflareDurable.open_websocket/2","doc":"Opens a WebSocket connection to a Durable Object.","ref":"CloudflareDurable.html#open_websocket/2"},{"type":"function","title":"Parameters - CloudflareDurable.open_websocket/2","doc":"* `object_id` - ID of the Durable Object to connect to\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL\n    * `:auto_reconnect` - Whether to automatically reconnect on disconnect (default: true)\n    * `:backoff_initial` - Initial backoff time in ms (default: 500)\n    * `:backoff_max` - Maximum backoff time in ms (default: 30000)","ref":"CloudflareDurable.html#open_websocket/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.open_websocket/2","doc":"* `{:ok, pid}` - Successfully opened WebSocket connection\n  * `{:error, reason}` - Failed to open WebSocket connection","ref":"CloudflareDurable.html#open_websocket/2-returns"},{"type":"type","title":"CloudflareDurable.state_key/0","doc":"","ref":"CloudflareDurable.html#t:state_key/0"},{"type":"type","title":"CloudflareDurable.state_value/0","doc":"","ref":"CloudflareDurable.html#t:state_value/0"},{"type":"function","title":"CloudflareDurable.update_state/4","doc":"Updates the state of a Durable Object.","ref":"CloudflareDurable.html#update_state/4"},{"type":"function","title":"Parameters - CloudflareDurable.update_state/4","doc":"* `object_id` - ID of the Durable Object to update\n  * `key` - Key to update\n  * `value` - Value to set\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.html#update_state/4-parameters"},{"type":"function","title":"Returns - CloudflareDurable.update_state/4","doc":"* `{:ok, response}` - Successfully updated state\n  * `{:error, reason}` - Failed to update state","ref":"CloudflareDurable.html#update_state/4-returns"},{"type":"function","title":"CloudflareDurable.websocket_close/1","doc":"Closes a WebSocket connection.","ref":"CloudflareDurable.html#websocket_close/1"},{"type":"function","title":"Parameters - CloudflareDurable.websocket_close/1","doc":"* `connection` - WebSocket connection PID","ref":"CloudflareDurable.html#websocket_close/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.websocket_close/1","doc":"* `:ok` - Connection closed successfully\n  * `{:error, reason}` - Failed to close connection","ref":"CloudflareDurable.html#websocket_close/1-returns"},{"type":"function","title":"CloudflareDurable.websocket_connect/3","doc":"Establishes a WebSocket connection to a Durable Object.","ref":"CloudflareDurable.html#websocket_connect/3"},{"type":"function","title":"Parameters - CloudflareDurable.websocket_connect/3","doc":"* `object_id` - ID of the Durable Object to connect to\n  * `path` - Path to connect to (default: \"/\")\n  * `opts` - Connection options:\n    * `:subscriber` - PID to receive WebSocket messages\n    * `:auto_reconnect` - Whether to automatically reconnect on disconnect (default: true)\n    * `:backoff_initial` - Initial backoff time in ms (default: 500)\n    * `:backoff_max` - Maximum backoff time in ms (default: 30000)","ref":"CloudflareDurable.html#websocket_connect/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.websocket_connect/3","doc":"* `{:ok, pid}` - Successfully established WebSocket connection\n  * `{:error, reason}` - Failed to establish WebSocket connection","ref":"CloudflareDurable.html#websocket_connect/3-returns"},{"type":"type","title":"CloudflareDurable.websocket_connection/0","doc":"","ref":"CloudflareDurable.html#t:websocket_connection/0"},{"type":"function","title":"CloudflareDurable.websocket_send/2","doc":"Sends a message over a WebSocket connection.","ref":"CloudflareDurable.html#websocket_send/2"},{"type":"function","title":"Parameters - CloudflareDurable.websocket_send/2","doc":"* `connection` - WebSocket connection PID\n  * `message` - Message to send","ref":"CloudflareDurable.html#websocket_send/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.websocket_send/2","doc":"* `:ok` - Message sent successfully\n  * `{:error, reason}` - Failed to send message","ref":"CloudflareDurable.html#websocket_send/2-returns"},{"type":"module","title":"CloudflareDurable.Client","doc":"Client for interacting with Cloudflare Durable Objects.\n\nThis module provides functions for communicating with Cloudflare Workers and Durable Objects,\nallowing applications to leverage edge-located, stateful storage and processing.","ref":"CloudflareDurable.Client.html"},{"type":"function","title":"CloudflareDurable.Client.call_method/4","doc":"Calls a method on a Durable Object.","ref":"CloudflareDurable.Client.html#call_method/4"},{"type":"function","title":"Parameters - CloudflareDurable.Client.call_method/4","doc":"* `object_id` - ID of the Durable Object to call\n  * `method` - Method to call on the Durable Object\n  * `params` - Parameters to pass to the method\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.Client.html#call_method/4-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Client.call_method/4","doc":"* `{:ok, response}` - Successfully called method on Durable Object\n  * `{:error, reason}` - Failed to call method on Durable Object","ref":"CloudflareDurable.Client.html#call_method/4-returns"},{"type":"type","title":"CloudflareDurable.Client.client_opts/0","doc":"","ref":"CloudflareDurable.Client.html#t:client_opts/0"},{"type":"type","title":"CloudflareDurable.Client.connection_opts/0","doc":"","ref":"CloudflareDurable.Client.html#t:connection_opts/0"},{"type":"function","title":"CloudflareDurable.Client.delete_state/3","doc":"Deletes a key from a Durable Object's state.","ref":"CloudflareDurable.Client.html#delete_state/3"},{"type":"function","title":"Parameters - CloudflareDurable.Client.delete_state/3","doc":"* `object_id` - ID of the Durable Object to update\n  * `key` - Key to delete\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.Client.html#delete_state/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Client.delete_state/3","doc":"* `{:ok, response}` - Successfully deleted key\n  * `{:error, reason}` - Failed to delete key","ref":"CloudflareDurable.Client.html#delete_state/3-returns"},{"type":"type","title":"CloudflareDurable.Client.error_reason/0","doc":"","ref":"CloudflareDurable.Client.html#t:error_reason/0"},{"type":"function","title":"CloudflareDurable.Client.get_namespace_object/4","doc":"Gets a namespace object ID from a namespace and name.","ref":"CloudflareDurable.Client.html#get_namespace_object/4"},{"type":"function","title":"Parameters - CloudflareDurable.Client.get_namespace_object/4","doc":"* `client` - Client module\n  * `namespace` - Durable Object namespace\n  * `name` - Name within the namespace\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.Client.html#get_namespace_object/4-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Client.get_namespace_object/4","doc":"* `{:ok, object_id}` - Successfully got object ID\n  * `{:error, reason}` - Failed to get object ID","ref":"CloudflareDurable.Client.html#get_namespace_object/4-returns"},{"type":"function","title":"CloudflareDurable.Client.get_state/3","doc":"Gets the state of a Durable Object.","ref":"CloudflareDurable.Client.html#get_state/3"},{"type":"function","title":"Parameters - CloudflareDurable.Client.get_state/3","doc":"* `object_id` - ID of the Durable Object to get state from\n  * `key` - Optional specific key to get (if nil, gets all state)\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.Client.html#get_state/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Client.get_state/3","doc":"* `{:ok, state}` - Successfully retrieved state\n  * `{:error, reason}` - Failed to retrieve state","ref":"CloudflareDurable.Client.html#get_state/3-returns"},{"type":"type","title":"CloudflareDurable.Client.http_body/0","doc":"","ref":"CloudflareDurable.Client.html#t:http_body/0"},{"type":"type","title":"CloudflareDurable.Client.http_headers/0","doc":"","ref":"CloudflareDurable.Client.html#t:http_headers/0"},{"type":"type","title":"CloudflareDurable.Client.http_method/0","doc":"","ref":"CloudflareDurable.Client.html#t:http_method/0"},{"type":"type","title":"CloudflareDurable.Client.http_response/0","doc":"","ref":"CloudflareDurable.Client.html#t:http_response/0"},{"type":"type","title":"CloudflareDurable.Client.http_status/0","doc":"","ref":"CloudflareDurable.Client.html#t:http_status/0"},{"type":"function","title":"CloudflareDurable.Client.initialize/3","doc":"Initializes a new Durable Object instance.","ref":"CloudflareDurable.Client.html#initialize/3"},{"type":"function","title":"Parameters - CloudflareDurable.Client.initialize/3","doc":"* `object_id` - ID of the Durable Object to initialize\n  * `data` - Initial data to store in the Durable Object\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.Client.html#initialize/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Client.initialize/3","doc":"* `{:ok, response}` - Successfully initialized Durable Object\n  * `{:error, reason}` - Failed to initialize Durable Object","ref":"CloudflareDurable.Client.html#initialize/3-returns"},{"type":"type","title":"CloudflareDurable.Client.method_name/0","doc":"","ref":"CloudflareDurable.Client.html#t:method_name/0"},{"type":"type","title":"CloudflareDurable.Client.object_id/0","doc":"","ref":"CloudflareDurable.Client.html#t:object_id/0"},{"type":"function","title":"CloudflareDurable.Client.open_websocket/2","doc":"Opens a WebSocket connection to a Durable Object.","ref":"CloudflareDurable.Client.html#open_websocket/2"},{"type":"function","title":"Parameters - CloudflareDurable.Client.open_websocket/2","doc":"* `object_id` - ID of the Durable Object to connect to\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL\n    * `:auto_reconnect` - Whether to automatically reconnect on disconnect (default: true)\n    * `:backoff_initial` - Initial backoff time in ms (default: 500)\n    * `:backoff_max` - Maximum backoff time in ms (default: 30000)","ref":"CloudflareDurable.Client.html#open_websocket/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Client.open_websocket/2","doc":"* `{:ok, pid}` - Successfully opened WebSocket connection\n  * `{:error, reason}` - Failed to open WebSocket connection","ref":"CloudflareDurable.Client.html#open_websocket/2-returns"},{"type":"type","title":"CloudflareDurable.Client.t/0","doc":"","ref":"CloudflareDurable.Client.html#t:t/0"},{"type":"function","title":"CloudflareDurable.Client.update_state/4","doc":"Updates the state of a Durable Object.","ref":"CloudflareDurable.Client.html#update_state/4"},{"type":"function","title":"Parameters - CloudflareDurable.Client.update_state/4","doc":"* `object_id` - ID of the Durable Object to update\n  * `key` - Key to update\n  * `value` - Value to set\n  * `opts` - Optional parameters:\n    * `:worker_url` - Override the default worker URL","ref":"CloudflareDurable.Client.html#update_state/4-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Client.update_state/4","doc":"* `{:ok, response}` - Successfully updated state\n  * `{:error, reason}` - Failed to update state","ref":"CloudflareDurable.Client.html#update_state/4-returns"},{"type":"function","title":"CloudflareDurable.Client.websocket_connect/4","doc":"Establishes a WebSocket connection to a Durable Object.","ref":"CloudflareDurable.Client.html#websocket_connect/4"},{"type":"function","title":"Parameters - CloudflareDurable.Client.websocket_connect/4","doc":"* `client` - Client module\n  * `object_id` - ID of the Durable Object to connect to\n  * `path` - Path to connect to\n  * `opts` - Connection options:\n    * `:subscriber` - PID to receive WebSocket messages\n    * `:auto_reconnect` - Whether to automatically reconnect on disconnect (default: true)\n    * `:backoff_initial` - Initial backoff time in ms (default: 500)\n    * `:backoff_max` - Maximum backoff time in ms (default: 30000)","ref":"CloudflareDurable.Client.html#websocket_connect/4-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Client.websocket_connect/4","doc":"* `{:ok, pid}` - Successfully established WebSocket connection\n  * `{:error, reason}` - Failed to establish WebSocket connection","ref":"CloudflareDurable.Client.html#websocket_connect/4-returns"},{"type":"module","title":"CloudflareDurable.WebSocket.Connection","doc":"WebSocket connection to a Durable Object.\n\nThis module manages a WebSocket connection to a Cloudflare Durable Object,\nhandling reconnection, message sending, and event handling.","ref":"CloudflareDurable.WebSocket.Connection.html"},{"type":"function","title":"CloudflareDurable.WebSocket.Connection.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"CloudflareDurable.WebSocket.Connection.html#child_spec/1"},{"type":"type","title":"CloudflareDurable.WebSocket.Connection.connection_opts/0","doc":"","ref":"CloudflareDurable.WebSocket.Connection.html#t:connection_opts/0"},{"type":"type","title":"CloudflareDurable.WebSocket.Connection.connection_state/0","doc":"","ref":"CloudflareDurable.WebSocket.Connection.html#t:connection_state/0"},{"type":"type","title":"CloudflareDurable.WebSocket.Connection.connection_status/0","doc":"","ref":"CloudflareDurable.WebSocket.Connection.html#t:connection_status/0"},{"type":"type","title":"CloudflareDurable.WebSocket.Connection.error_reason/0","doc":"","ref":"CloudflareDurable.WebSocket.Connection.html#t:error_reason/0"},{"type":"type","title":"CloudflareDurable.WebSocket.Connection.object_id/0","doc":"","ref":"CloudflareDurable.WebSocket.Connection.html#t:object_id/0"},{"type":"function","title":"CloudflareDurable.WebSocket.Connection.send_message/2","doc":"Sends a message over the WebSocket connection.","ref":"CloudflareDurable.WebSocket.Connection.html#send_message/2"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.Connection.send_message/2","doc":"* `pid` - PID of the connection process\n  * `message` - Message to send (will be JSON encoded)","ref":"CloudflareDurable.WebSocket.Connection.html#send_message/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Connection.send_message/2","doc":"* `:ok` - Message sent successfully\n  * `{:error, reason}` - Failed to send message","ref":"CloudflareDurable.WebSocket.Connection.html#send_message/2-returns"},{"type":"function","title":"CloudflareDurable.WebSocket.Connection.start_link/1","doc":"Starts a WebSocket connection to a Durable Object.","ref":"CloudflareDurable.WebSocket.Connection.html#start_link/1"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.Connection.start_link/1","doc":"* `object_id` - ID of the Durable Object to connect to\n  * `opts` - Connection options:\n    * `:url` - WebSocket URL\n    * `:auto_reconnect` - Whether to automatically reconnect (default: true)\n    * `:backoff_initial` - Initial backoff time in ms (default: 500)\n    * `:backoff_max` - Maximum backoff time in ms (default: 30000)","ref":"CloudflareDurable.WebSocket.Connection.html#start_link/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Connection.start_link/1","doc":"* `{:ok, pid}` - Successfully started the connection GenServer\n  * `{:error, reason}` - Failed to start the connection GenServer","ref":"CloudflareDurable.WebSocket.Connection.html#start_link/1-returns"},{"type":"function","title":"CloudflareDurable.WebSocket.Connection.status/1","doc":"Gets the current status of the WebSocket connection.","ref":"CloudflareDurable.WebSocket.Connection.html#status/1"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.Connection.status/1","doc":"* `pid` - PID of the connection process","ref":"CloudflareDurable.WebSocket.Connection.html#status/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Connection.status/1","doc":"* `:connecting` - Connection is being established\n  * `:connected` - Connection is established\n  * `:disconnected` - Connection is not established","ref":"CloudflareDurable.WebSocket.Connection.html#status/1-returns"},{"type":"function","title":"CloudflareDurable.WebSocket.Connection.subscribe/1","doc":"Subscribes to messages from the WebSocket connection.","ref":"CloudflareDurable.WebSocket.Connection.html#subscribe/1"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.Connection.subscribe/1","doc":"* `pid` - PID of the connection process","ref":"CloudflareDurable.WebSocket.Connection.html#subscribe/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Connection.subscribe/1","doc":"* `:ok` - Subscription successful","ref":"CloudflareDurable.WebSocket.Connection.html#subscribe/1-returns"},{"type":"type","title":"CloudflareDurable.WebSocket.Connection.t/0","doc":"","ref":"CloudflareDurable.WebSocket.Connection.html#t:t/0"},{"type":"function","title":"CloudflareDurable.WebSocket.Connection.unsubscribe/1","doc":"Unsubscribes from messages from the WebSocket connection.","ref":"CloudflareDurable.WebSocket.Connection.html#unsubscribe/1"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.Connection.unsubscribe/1","doc":"* `pid` - PID of the connection process","ref":"CloudflareDurable.WebSocket.Connection.html#unsubscribe/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Connection.unsubscribe/1","doc":"* `:ok` - Unsubscription successful","ref":"CloudflareDurable.WebSocket.Connection.html#unsubscribe/1-returns"},{"type":"type","title":"CloudflareDurable.WebSocket.Connection.websocket_message/0","doc":"","ref":"CloudflareDurable.WebSocket.Connection.html#t:websocket_message/0"},{"type":"module","title":"CloudflareDurable.WebSocket.Supervisor","doc":"Supervisor for WebSocket connections to Durable Objects.\n\nThis supervisor manages the lifecycle of WebSocket connections to Cloudflare Durable Objects.","ref":"CloudflareDurable.WebSocket.Supervisor.html"},{"type":"function","title":"CloudflareDurable.WebSocket.Supervisor.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"CloudflareDurable.WebSocket.Supervisor.html#child_spec/1"},{"type":"type","title":"CloudflareDurable.WebSocket.Supervisor.connection_opts/0","doc":"","ref":"CloudflareDurable.WebSocket.Supervisor.html#t:connection_opts/0"},{"type":"type","title":"CloudflareDurable.WebSocket.Supervisor.error_reason/0","doc":"","ref":"CloudflareDurable.WebSocket.Supervisor.html#t:error_reason/0"},{"type":"function","title":"CloudflareDurable.WebSocket.Supervisor.list_connections/0","doc":"Lists all active WebSocket connections.","ref":"CloudflareDurable.WebSocket.Supervisor.html#list_connections/0"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Supervisor.list_connections/0","doc":"* `[pid()]` - List of PIDs for all active WebSocket connections","ref":"CloudflareDurable.WebSocket.Supervisor.html#list_connections/0-returns"},{"type":"type","title":"CloudflareDurable.WebSocket.Supervisor.object_id/0","doc":"","ref":"CloudflareDurable.WebSocket.Supervisor.html#t:object_id/0"},{"type":"function","title":"CloudflareDurable.WebSocket.Supervisor.start_connection/2","doc":"Starts a WebSocket connection to a Durable Object.","ref":"CloudflareDurable.WebSocket.Supervisor.html#start_connection/2"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.Supervisor.start_connection/2","doc":"* `object_id` - The ID of the Durable Object to connect to\n  * `opts` - Options for the WebSocket connection:\n    * `:url` - WebSocket URL\n    * `:auto_reconnect` - Whether to automatically reconnect (default: true)\n    * `:backoff_initial` - Initial backoff time in ms (default: 500)\n    * `:backoff_max` - Maximum backoff time in ms (default: 30000)","ref":"CloudflareDurable.WebSocket.Supervisor.html#start_connection/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Supervisor.start_connection/2","doc":"* `{:ok, pid}` - Successfully started WebSocket connection\n  * `{:error, reason}` - Failed to start WebSocket connection","ref":"CloudflareDurable.WebSocket.Supervisor.html#start_connection/2-returns"},{"type":"function","title":"CloudflareDurable.WebSocket.Supervisor.start_link/1","doc":"Starts the supervisor.","ref":"CloudflareDurable.WebSocket.Supervisor.html#start_link/1"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.Supervisor.start_link/1","doc":"* `init_arg` - Initialization arguments for the supervisor","ref":"CloudflareDurable.WebSocket.Supervisor.html#start_link/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Supervisor.start_link/1","doc":"* `{:ok, pid}` - Successfully started the supervisor\n  * `{:error, reason}` - Failed to start the supervisor","ref":"CloudflareDurable.WebSocket.Supervisor.html#start_link/1-returns"},{"type":"function","title":"CloudflareDurable.WebSocket.Supervisor.stop_connection/1","doc":"Stops a WebSocket connection.","ref":"CloudflareDurable.WebSocket.Supervisor.html#stop_connection/1"},{"type":"function","title":"Parameters - CloudflareDurable.WebSocket.Supervisor.stop_connection/1","doc":"* `pid` - The PID of the WebSocket connection to stop","ref":"CloudflareDurable.WebSocket.Supervisor.html#stop_connection/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.WebSocket.Supervisor.stop_connection/1","doc":"* `:ok` - Successfully stopped WebSocket connection\n  * `{:error, :not_found}` - Connection not found","ref":"CloudflareDurable.WebSocket.Supervisor.html#stop_connection/1-returns"},{"type":"type","title":"CloudflareDurable.WebSocket.Supervisor.supervisor_opts/0","doc":"","ref":"CloudflareDurable.WebSocket.Supervisor.html#t:supervisor_opts/0"},{"type":"module","title":"CloudflareDurable.Phoenix","doc":"Phoenix adapter for CloudflareDurable.\n\nThis module provides the public API for integrating CloudflareDurable\nwith Phoenix applications, including LiveView, Channels, and PubSub.\nIt acts as a convenient interface to the adapter's functionality.","ref":"CloudflareDurable.Phoenix.html"},{"type":"function","title":"CloudflareDurable.Phoenix.call_method/3","doc":"Calls a method on a Durable Object.","ref":"CloudflareDurable.Phoenix.html#call_method/3"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.call_method/3","doc":"* `object_id` - The ID of the Durable Object\n* `method` - The method to call\n* `params` - Parameters to pass to the method","ref":"CloudflareDurable.Phoenix.html#call_method/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.call_method/3","doc":"* `{:ok, result}` - The result of the method call\n* `{:error, reason}` - If there was an error","ref":"CloudflareDurable.Phoenix.html#call_method/3-returns"},{"type":"function","title":"CloudflareDurable.Phoenix.get_state/2","doc":"Gets state from a Durable Object.","ref":"CloudflareDurable.Phoenix.html#get_state/2"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.get_state/2","doc":"* `object_id` - The ID of the Durable Object\n* `key` - Optional specific key to retrieve","ref":"CloudflareDurable.Phoenix.html#get_state/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.get_state/2","doc":"* `{:ok, value}` - The state value\n* `{:error, reason}` - If there was an error","ref":"CloudflareDurable.Phoenix.html#get_state/2-returns"},{"type":"function","title":"CloudflareDurable.Phoenix.list_servers/0","doc":"Lists all active Durable Object servers.\n\nReturns a list of {object_id, pid} tuples for all active servers.","ref":"CloudflareDurable.Phoenix.html#list_servers/0"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.list_servers/0","doc":"* `[{object_id, pid}]` - List of active Durable Object servers","ref":"CloudflareDurable.Phoenix.html#list_servers/0-returns"},{"type":"function","title":"CloudflareDurable.Phoenix.start_durable_server/2","doc":"Starts a GenServer representing a Durable Object.","ref":"CloudflareDurable.Phoenix.html#start_durable_server/2"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.start_durable_server/2","doc":"* `object_id` - The ID of the Durable Object\n* `opts` - Options to pass to the server","ref":"CloudflareDurable.Phoenix.html#start_durable_server/2-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.start_durable_server/2","doc":"* `{:ok, pid}` - If the server was started\n* `{:error, reason}` - If the server could not be started","ref":"CloudflareDurable.Phoenix.html#start_durable_server/2-returns"},{"type":"function","title":"CloudflareDurable.Phoenix.subscribe/1","doc":"Subscribes the current process to updates from a Durable Object.","ref":"CloudflareDurable.Phoenix.html#subscribe/1"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.subscribe/1","doc":"* `object_id` - The ID of the Durable Object to subscribe to","ref":"CloudflareDurable.Phoenix.html#subscribe/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.subscribe/1","doc":"* `:ok` - If the subscription was successful\n* `{:error, reason}` - If there was an error","ref":"CloudflareDurable.Phoenix.html#subscribe/1-returns"},{"type":"function","title":"CloudflareDurable.Phoenix.unsubscribe/1","doc":"Unsubscribes the current process from updates from a Durable Object.","ref":"CloudflareDurable.Phoenix.html#unsubscribe/1"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.unsubscribe/1","doc":"* `object_id` - The ID of the Durable Object to unsubscribe from","ref":"CloudflareDurable.Phoenix.html#unsubscribe/1-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.unsubscribe/1","doc":"* `:ok` - If the unsubscription was successful\n* `{:error, reason}` - If there was an error","ref":"CloudflareDurable.Phoenix.html#unsubscribe/1-returns"},{"type":"function","title":"CloudflareDurable.Phoenix.update_state/3","doc":"Updates state in a Durable Object.","ref":"CloudflareDurable.Phoenix.html#update_state/3"},{"type":"function","title":"Parameters - CloudflareDurable.Phoenix.update_state/3","doc":"* `object_id` - The ID of the Durable Object\n* `key` - The key to update\n* `value` - The new value","ref":"CloudflareDurable.Phoenix.html#update_state/3-parameters"},{"type":"function","title":"Returns - CloudflareDurable.Phoenix.update_state/3","doc":"* `:ok` - If the update was successful\n* `{:error, reason}` - If there was an error","ref":"CloudflareDurable.Phoenix.html#update_state/3-returns"},{"type":"extras","title":"CloudflareDurable","doc":"# CloudflareDurable\n\n[![Hex.pm](https://img.shields.io/hexpm/v/cloudflare_durable.svg)](https://hex.pm/packages/cloudflare_durable)\n[![Docs](https://img.shields.io/badge/hex-docs-blue.svg)](https://hexdocs.pm/cloudflare_durable)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n[![Build Status](https://github.com/jmanhype/cloudflare_durable_ex/workflows/CI/badge.svg)](https://github.com/jmanhype/cloudflare_durable_ex/actions)\n\nAn Elixir client for Cloudflare Durable Objects, providing a simple interface for distributed state management, WebSocket connections, and method invocation. This library enables Elixir applications to leverage Cloudflare's globally distributed persistent state without managing complex infrastructure.\n\n**📚 [View Full Documentation](https://jmanhype.github.io/cloudflare_durable_ex/)** - Comprehensive guides, API reference, and examples","ref":"readme.html"},{"type":"extras","title":"Features - CloudflareDurable","doc":"- Initialize Durable Objects with initial state\n- Call methods on remote Durable Objects\n- Establish WebSocket connections for real-time updates\n- Transparent error handling and reconnection\n- Event-based architecture using Telemetry\n- Configurable through standard Elixir configuration\n- Type specifications for better development experience","ref":"readme.html#features"},{"type":"extras","title":"Phoenix Integration - CloudflareDurable","doc":"CloudflareDurable includes a Phoenix adapter that integrates with Phoenix Channels, LiveView, and PubSub for real-time communication with Cloudflare Durable Objects. For Phoenix applications, this provides a seamless way to interact with Durable Objects:\n\n- Real-time updates via Phoenix Channels and LiveView\n- Bidirectional communication with WebSockets\n- LiveView components for easy UI integration\n- Presence tracking of connected clients\n- Automatic state synchronization\n\nSee the [Phoenix Adapter Documentation](lib/cloudflare_durable/phoenix/README.md) for setup and usage examples.","ref":"readme.html#phoenix-integration"},{"type":"extras","title":"Documentation - CloudflareDurable","doc":"- **[GitHub Pages Documentation](https://jmanhype.github.io/cloudflare_durable_ex/)** - Our main documentation site with comprehensive guides and examples\n- [API Reference](https://hexdocs.pm/cloudflare_durable) - Detailed API documentation on HexDocs\n- [Examples](https://github.com/jmanhype/cloudflare_durable_ex/tree/main/examples) - Code examples showing various use cases","ref":"readme.html#documentation"},{"type":"extras","title":"Installation - CloudflareDurable","doc":"Add `cloudflare_durable` to your mix.exs dependencies:\n\n```elixir\ndef deps do\n  [\n    {:cloudflare_durable, \"~> 0.2.0\"}\n  ]\nend\n```\n\nThen run:\n\n```bash\nmix deps.get\n```","ref":"readme.html#installation"},{"type":"extras","title":"Configuration - CloudflareDurable","doc":"Add the following to your application configuration:\n\n```elixir\n# In config/config.exs\nconfig :cloudflare_durable,\n  worker_url: System.get_env(\"CLOUDFLARE_WORKER_URL\") || \"https://your-worker.your-subdomain.workers.dev\",\n  account_id: System.get_env(\"CLOUDFLARE_ACCOUNT_ID\"),\n  api_token: System.get_env(\"CLOUDFLARE_API_TOKEN\"),\n  # Optional settings\n  timeout: 30_000,                   # Request timeout in milliseconds\n  retry_count: 3,                    # Number of retries for failed requests\n  retry_delay: 500,                  # Delay between retries in milliseconds\n  websocket_reconnect_delay: 1_000,  # Delay before reconnecting WebSockets\n  pool_size: 10                      # HTTP connection pool size\n```","ref":"readme.html#configuration"},{"type":"extras","title":"Environment Variables - CloudflareDurable","doc":"For production use, we recommend setting the following environment variables:\n\n- `CLOUDFLARE_WORKER_URL`: URL of your deployed Cloudflare Worker\n- `CLOUDFLARE_ACCOUNT_ID`: Your Cloudflare account ID\n- `CLOUDFLARE_API_TOKEN`: API token with appropriate permissions","ref":"readme.html#environment-variables"},{"type":"extras","title":"Usage - CloudflareDurable","doc":"","ref":"readme.html#usage"},{"type":"extras","title":"Basic Examples - CloudflareDurable","doc":"#### Initialize a Durable Object\n\n```elixir\nalias CloudflareDurable.Client\n\n# Initialize a new Durable Object with an initial state\n{:ok, response} = Client.initialize(\"counter\", %{value: 0})\n```\n\n#### Call Methods on a Durable Object\n\n```elixir\n# Call a method on the Durable Object\n{:ok, result} = Client.call_method(\"counter\", \"increment\", %{increment: 1})\nIO.inspect(result) # => %{\"value\" => 1}\n\n# Call another method\n{:ok, result} = Client.call_method(\"counter\", \"get_value\", %{})\nIO.inspect(result) # => %{\"value\" => 1}\n```\n\n#### Open a WebSocket Connection\n\n```elixir\n# Open a WebSocket for real-time updates\n{:ok, socket} = Client.open_websocket(\"counter\")\n\n# Register a message handler\nCloudflareDurable.WebSocket.Connection.register_handler(socket, fn message ->\n  IO.puts(\"Received message: #{inspect(message)}\")\nend)\n\n# Send a message through WebSocket (new simplified API)\nCloudflareDurable.websocket_send(socket, Jason.encode!(%{type: \"update\", value: 42}))\n\n# When done, close the connection properly\nCloudflareDurable.websocket_close(socket)\n```","ref":"readme.html#basic-examples"},{"type":"extras","title":"Advanced Examples - CloudflareDurable","doc":"#### Distributed Counter\n\n```elixir\ndefmodule MyApp.DistributedCounter do\n  alias CloudflareDurable.Client\n  \n  @doc \"\"\"\n  Creates a new counter with a starting value\n  \"\"\"\n  def create(id, start_value \\\\ 0) do\n    Client.initialize(\"counter-#{id}\", %{value: start_value})\n  end\n  \n  @doc \"\"\"\n  Increments the counter by the given amount\n  \"\"\"\n  def increment(id, amount \\\\ 1) do\n    case Client.call_method(\"counter-#{id}\", \"increment\", %{increment: amount}) do\n      {:ok, result} -> {:ok, result[\"value\"]}\n      {:error, _} = error -> error\n    end\n  end\n  \n  @doc \"\"\"\n  Gets the current value of the counter\n  \"\"\"\n  def get_value(id) do\n    case Client.call_method(\"counter-#{id}\", \"get_value\", %{}) do\n      {:ok, result} -> {:ok, result[\"value\"]}\n      {:error, _} = error -> error\n    end\n  end\n  \n  @doc \"\"\"\n  Subscribes to counter updates\n  \"\"\"\n  def subscribe(id, pid) do\n    with {:ok, socket} <- Client.open_websocket(\"counter-#{id}\") do\n      CloudflareDurable.WebSocket.Connection.register_handler(socket, fn message ->\n        send(pid, {:counter_update, id, message[\"value\"]})\n      end)\n      {:ok, socket}\n    end\n  end\nend\n```\n\n#### Collaborative Document Editing\n\n```elixir\n# Initialize a collaborative document\n{:ok, _} = CloudflareDurable.Client.initialize(\"document-123\", %{\n  content: \"Initial document content\",\n  version: 1,\n  editors: []\n})\n\n# Join as an editor\n{:ok, result} = CloudflareDurable.Client.call_method(\"document-123\", \"join\", %{\n  editor_id: \"user-456\",\n  name: \"John Doe\"\n})\n\n# Make an edit\n{:ok, result} = CloudflareDurable.Client.call_method(\"document-123\", \"update\", %{\n  editor_id: \"user-456\",\n  content: \"Updated document content\",\n  version: 2\n})\n\n# Open WebSocket for real-time updates\n{:ok, socket} = CloudflareDurable.Client.open_websocket(\"document-123\")\nCloudflareDurable.WebSocket.Connection.register_handler(socket, fn message ->\n  case message do\n    %{\"type\" => \"edit\", \"editor\" => editor, \"content\" => content, \"version\" => version} ->\n      IO.puts(\"#{editor} updated the document to version #{version}\")\n      \n    %{\"type\" => \"join\", \"editor\" => editor} ->\n      IO.puts(\"#{editor} joined the document\")\n      \n    %{\"type\" => \"leave\", \"editor\" => editor} ->\n      IO.puts(\"#{editor} left the document\")\n  end\nend)\n```","ref":"readme.html#advanced-examples"},{"type":"extras","title":"Deploying the Durable Objects Worker - CloudflareDurable","doc":"This library relies on a Cloudflare Worker script that handles the Durable Objects. A reference implementation is included in the `priv/cloudflare` directory.\n\n1. Install Wrangler (Cloudflare's CLI tool):\n   ```bash\n   npm install -g wrangler\n   ```\n\n2. Authenticate with Cloudflare:\n   ```bash\n   wrangler login\n   ```\n\n3. Deploy the Worker and Durable Object:\n   ```bash\n   cd priv/cloudflare\n   wrangler publish\n   ```\n\n4. Note the URL of your deployed worker and update your configuration.","ref":"readme.html#deploying-the-durable-objects-worker"},{"type":"extras","title":"Reference Worker Implementation - CloudflareDurable","doc":"The reference implementation in the `priv/cloudflare` directory provides:\n\n- REST API for Durable Object method invocation\n- WebSocket connections to Durable Objects\n- User-defined method handlers\n- Persistence of Durable Object state","ref":"readme.html#reference-worker-implementation"},{"type":"extras","title":"Telemetry Metrics - CloudflareDurable","doc":"This library emits telemetry events that you can subscribe to:\n\n- `[:cloudflare_durable, :request, :start]` - When a request to a Durable Object starts\n- `[:cloudflare_durable, :request, :stop]` - When a request to a Durable Object completes\n- `[:cloudflare_durable, :websocket, :connected]` - When a WebSocket connection is established\n- `[:cloudflare_durable, :websocket, :disconnected]` - When a WebSocket connection is closed\n- `[:cloudflare_durable, :error]` - When an error occurs","ref":"readme.html#telemetry-metrics"},{"type":"extras","title":"Example Telemetry Setup - CloudflareDurable","doc":"```elixir\ndefmodule MyApp.Telemetry do\n  def setup do\n    :telemetry.attach(\n      \"cloudflare-durable-request-handler\",\n      [:cloudflare_durable, :request, :stop],\n      &handle_request_event/4,\n      nil\n    )\n    \n    :telemetry.attach(\n      \"cloudflare-durable-error-handler\",\n      [:cloudflare_durable, :error],\n      &handle_error_event/4,\n      nil\n    )\n  end\n  \n  defp handle_request_event(_event, measurements, metadata, _config) do\n    # Log or record metrics about requests\n    IO.puts(\"Request to #{metadata.object_id}##{metadata.method} completed in #{measurements.duration} ms\")\n  end\n  \n  defp handle_error_event(_event, _measurements, metadata, _config) do\n    # Log or record error metrics\n    IO.puts(\"Error in CloudflareDurable: #{inspect(metadata.error)}\")\n  end\nend\n```","ref":"readme.html#example-telemetry-setup"},{"type":"extras","title":"Benchmarking - CloudflareDurable","doc":"CloudflareDurable includes benchmarking tools to measure the performance of various operations. These benchmarks are useful for:\n\n- Comparing performance across different environments\n- Identifying bottlenecks in your application\n- Understanding the performance characteristics of Durable Objects","ref":"readme.html#benchmarking"},{"type":"extras","title":"Running Benchmarks - CloudflareDurable","doc":"To run all benchmarks:\n\n```bash\nmix benchmark\n```\n\nTo run a specific benchmark category:\n\n```bash\n# HTTP request benchmarks\nmix benchmark http\n\n# WebSocket benchmarks\nmix benchmark websocket\n\n# State operation benchmarks\nmix benchmark state\n```","ref":"readme.html#running-benchmarks"},{"type":"extras","title":"Benchmark Options - CloudflareDurable","doc":"The following options are available:\n\n- `--output` or `-o`: Specify an output directory for HTML reports\n- `--save` or `-s`: Save the benchmark results for later comparison\n- `--compare` or `-c`: Compare with a previously saved benchmark result\n\nExample:\n\n```bash\n# Run benchmarks, save results, and generate HTML reports\nmix benchmark --output reports --save\n\n# Compare current performance with previous results\nmix benchmark --compare benchmarks/results/http_20231001_120000.benchee\n```","ref":"readme.html#benchmark-options"},{"type":"extras","title":"Configuring Benchmarks - CloudflareDurable","doc":"Benchmarks can be configured using environment variables:\n\n- `BENCHMARK_WORKER_URL`: The URL of the Cloudflare Worker (default: http://localhost:8787)\n- `BENCHMARK_CONCURRENCY`: The number of concurrent operations (default: 4)\n- `BENCHMARK_DURATION`: The duration of each benchmark in seconds (default: 5)\n\nExample:\n\n```bash\nBENCHMARK_WORKER_URL=https://durable-objects.example.workers.dev \\\nBENCHMARK_CONCURRENCY=8 \\\nBENCHMARK_DURATION=10 \\\nmix benchmark\n```","ref":"readme.html#configuring-benchmarks"},{"type":"extras","title":"Contributing - CloudflareDurable","doc":"Contributions are welcome! Please feel free to submit a Pull Request.\n\n1. Fork the repository\n2. Create your feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add some amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request","ref":"readme.html#contributing"},{"type":"extras","title":"License - CloudflareDurable","doc":"This package is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.","ref":"readme.html#license"},{"type":"extras","title":"CHANGELOG","doc":"","ref":"changelog.html"},{"type":"extras","title":"Contributing to CloudflareDurable","doc":"# Contributing to CloudflareDurable\n\nThank you for considering contributing to CloudflareDurable! This document outlines the process for contributing to this project.","ref":"contributing.html"},{"type":"extras","title":"Code of Conduct - Contributing to CloudflareDurable","doc":"This project and everyone participating in it is governed by our [Code of Conduct](CODE_OF_CONDUCT.md). By participating, you are expected to uphold this code.","ref":"contributing.html#code-of-conduct"},{"type":"extras","title":"How Can I Contribute? - Contributing to CloudflareDurable","doc":"","ref":"contributing.html#how-can-i-contribute"},{"type":"extras","title":"Reporting Bugs - Contributing to CloudflareDurable","doc":"This section guides you through submitting a bug report. Following these guidelines helps maintainers and the community understand your report, reproduce the behavior, and find related reports.\n\nBefore creating bug reports, please check the issue list as you might find out that you don't need to create one. When you are creating a bug report, please include as many details as possible:\n\n* **Use a clear and descriptive title** for the issue to identify the problem.\n* **Describe the exact steps which reproduce the problem** in as many details as possible.\n* **Provide specific examples to demonstrate the steps**. Include links to files or GitHub projects, or copy/pasteable snippets, which you use in those examples.\n* **Describe the behavior you observed after following the steps** and point out what exactly is the problem with that behavior.\n* **Explain which behavior you expected to see instead and why.**\n* **Include screenshots and animated GIFs** which show you following the described steps and clearly demonstrate the problem.\n* **If the problem is related to performance or memory**, include a CPU profile capture with your report.\n* **If the problem wasn't triggered by a specific action**, describe what you were doing before the problem happened.","ref":"contributing.html#reporting-bugs"},{"type":"extras","title":"Suggesting Enhancements - Contributing to CloudflareDurable","doc":"This section guides you through submitting an enhancement suggestion, including completely new features and minor improvements to existing functionality.\n\n* **Use a clear and descriptive title** for the issue to identify the suggestion.\n* **Provide a step-by-step description of the suggested enhancement** in as many details as possible.\n* **Provide specific examples to demonstrate the steps**. Include copy/pasteable snippets which you use in those examples.\n* **Describe the current behavior** and **explain which behavior you expected to see instead** and why.\n* **Include screenshots and animated GIFs** which help you demonstrate the steps or point out the part of the library which the suggestion is related to.\n* **Explain why this enhancement would be useful** to most users.\n* **List some other libraries or frameworks where this enhancement exists.**","ref":"contributing.html#suggesting-enhancements"},{"type":"extras","title":"Pull Requests - Contributing to CloudflareDurable","doc":"* Fill in the required template\n* Follow the Elixir style guides\n* Include tests that verify your changes\n* Update documentation as needed\n* End all files with a newline","ref":"contributing.html#pull-requests"},{"type":"extras","title":"Development Process - Contributing to CloudflareDurable","doc":"","ref":"contributing.html#development-process"},{"type":"extras","title":"Setting Up a Development Environment - Contributing to CloudflareDurable","doc":"1. Fork and clone the repository\n2. Run `mix deps.get` to install dependencies\n3. Run `mix test` to ensure everything is working","ref":"contributing.html#setting-up-a-development-environment"},{"type":"extras","title":"Coding Conventions - Contributing to CloudflareDurable","doc":"* We follow the [Elixir Formatting Guidelines](https://hexdocs.pm/mix/main/Mix.Tasks.Format.html)\n* Run `mix format` before committing to ensure consistent formatting\n* Run `mix credo` to check for code style issues\n* Run `mix dialyzer` to perform static analysis","ref":"contributing.html#coding-conventions"},{"type":"extras","title":"Testing - Contributing to CloudflareDurable","doc":"* Include tests for all new features or bug fixes\n* Run `mix test` to ensure all tests pass\n* Aim for high test coverage with `mix coveralls`","ref":"contributing.html#testing"},{"type":"extras","title":"Documentation - Contributing to CloudflareDurable","doc":"* Update module documentation using proper `@doc` and `@moduledoc` attributes\n* Keep the README.md up-to-date with changes\n* Update the CHANGELOG.md for all notable changes","ref":"contributing.html#documentation"},{"type":"extras","title":"Releasing - Contributing to CloudflareDurable","doc":"The release process is managed by maintainers:\n\n1. Update version in `mix.exs`\n2. Update `CHANGELOG.md` with the new version\n3. Create a new tag for the version\n4. Push the tag and GitHub Actions will handle publishing to Hex.pm","ref":"contributing.html#releasing"},{"type":"extras","title":"Questions? - Contributing to CloudflareDurable","doc":"Feel free to open an issue with your question or contact the maintainers directly.","ref":"contributing.html#questions"},{"type":"extras","title":"LICENSE","doc":"MIT License\n\nCopyright (c) 2025 jmanhype\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.","ref":"license.html"}],"content_type":"text/markdown","proglang":"elixir","producer":{"name":"ex_doc","version":"0.37.3"}}